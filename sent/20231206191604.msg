From: newmail@new.com
To: newmail@new.com
Subject: test fix bug
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="dGhpc19pc190aGVfc2VwYXJhdGVkX3N0cmluZw=="

--dGhpc19pc190aGVfc2VwYXJhdGVkX3N0cmluZw==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit

dadadasdasd

--dGhpc19pc190aGVfc2VwYXJhdGVkX3N0cmluZw==
Content-Type: application/octet-stream
MIME-Version: 1.0
Content-Disposition: attachment; filename="backup_read_mail.txt"
Content-Transfer-Encoding: base64

aW1wb3J0IHNvY2tldA0KaW1wb3J0IGJhc2U2NA0KaW1wb3J0IGpzb24NCmltcG9ydCBvcywgc2h1dGlsDQppbXBvcnQgZGF0YQ0KZnJvbSBQeVF0NiBpbXBvcnQgUXRXaWRnZXRzLCB1aWMNCmZyb20gUHlRdDYuUXRXaWRnZXRzIGltcG9ydCAqDQppbXBvcnQgc3lzDQoNCmNsYXNzIFJlYWRNYWlsKFFEaWFsb2cpOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmKToNCiAgICAgICAgc3VwZXIoUmVhZE1haWwsIHNlbGYpLl9faW5pdF9fKCkNCiAgICAgICAgdWljLmxvYWRVaSgncmVhZF9tYWlsLnVpJywgc2VsZikNCg0KDQoNCg0KZGVmIEQzX3JlY2VpdmVfZGF0YShzb2NrLHNfY29uZGl0aW9uPWInXHJcbicpOg0KICAgIGRhdGEgPSBiIiINCiAgICB3aGlsZSBUcnVlOg0KICAgICAgICBjaHVuayA9IHNvY2sucmVjdigxMDI0KQ0KICAgICAgICBpZiBub3QgY2h1bms6DQogICAgICAgICAgICBicmVhaw0KICAgICAgICBkYXRhICs9IGNodW5rDQogICAgICAgIGlmIHNfY29uZGl0aW9uIGluIGNodW5rOg0KICAgICAgICAgICAgYnJlYWsNCiAgICByZXR1cm4gZGF0YQ0KDQpkZWYgRDNfc2VuZF9jb21tYW5kKHNvY2ssY29tbWFuZCxzX2NvbmRpdGlvbj1iJ1xyXG4nKToNCiAgICBzb2NrLnNlbmRhbGwoY29tbWFuZC5lbmNvZGUoJ3V0Zi04JykgKyBiJ1xyXG4nKQ0KICAgIHJldHVybiBEM19yZWNlaXZlX2RhdGEoc29jayxzX2NvbmRpdGlvbikNCg0KIiIiZGVmIEQzX3JlY2VpdmVfZGF0YV9lKHNvY2spOg0KICAgIGRhdGE9YiIiDQogICAgd2hpbGUgVHJ1ZToNCiAgICAgICAgY2h1bmsgPSBzb2NrLnJlY3YoMTAyNCkNCiAgICAgICAgaWYgbm90IGNodW5rOg0KICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgZGF0YSArPSBjaHVuaw0KICAgICAgICBpZiBiJ1xyXG4uXHJcbicgaW4gY2h1bms6DQogICAgICAgICAgICBicmVhaw0KICAgIHJldHVybiBkYXRhDQoNCmRlZiBEM19zZW5kX2NvbW1hbmRfZShzb2NrLGNvbW1hbmQpOg0KICAgIHNvY2suc2VuZGFsbChjb21tYW5kLmVuY29kZSgndXRmLTgnKSArIGInXHJcbicpDQogICAgcmV0dXJuIEQzX3JlY2VpdmVfZGF0YV9lKHNvY2spIiIiDQoNCmRlZiBEM19saXN0X3RvX2RpY3QobGlzdF9tYWlscyk6DQogICAgbGlzdF9tYWlscyA9IGxpc3RfbWFpbHMuc3BsaXQoJ1xyXG4nKVsxOi0yXQ0KICAgIGRhdGEgPSB7c3RyKGkpOiBsaXN0X21haWxzW2kgLSAxXS5zcGxpdCgpWzFdIGZvciBpIGluIHJhbmdlKDEsIGxlbihsaXN0X21haWxzKSArIDEpfQ0KICAgIHJldHVybiBkYXRhDQoNCmRlZiBEM19zYXZlX2xpc3QoZGF0YSxmaWxlbmFtZSk6DQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKG1haWxfZm9sZGVyKToNCiAgICAgICAgb3MubWFrZWRpcnMobWFpbF9mb2xkZXIpDQogICAgI3dyaXRlIC5qc29uDQogICAgZmlsZV9wYXRoID0gb3MucGF0aC5qb2luKG1haWxfZm9sZGVyLCBmaWxlbmFtZSkNCiAgICB3aXRoIG9wZW4oZmlsZV9wYXRoLCd3JykgYXMganNvbl9maWxlOg0KICAgICAgICBqc29uX2ZpbGUud3JpdGUoanNvbi5kdW1wcyhkYXRhKSkNCg0KICAgICIiIndpdGggb3BlbihmaWxlX3BhdGgsJ3InKSBhcyBqc29uX2ZpbGU6DQogICAgICAgIGRhdGEgPSBqc29uLmxvYWRzKGpzb25fZmlsZS5yZWFkKCkpDQogICAgZm9yIGkgaW4gcmFuZ2UoMSxsZW4obGlzdF9tYWlscykrMSk6DQogICAgICAgIHByaW50KGRhdGFbc3RyKGkpXSxlbmQ9J1xyXG4nKSIiIg0KDQpkZWYgRDNfcmVhZF9qc29uX2ZpbGUoZmlsZV9wYXRoKToNCiAgICB3aXRoIG9wZW4oZmlsZV9wYXRoLCdyJykgYXMganNvbl9maWxlOg0KICAgICAgICBkYXRhPWpzb24ubG9hZHMoanNvbl9maWxlLnJlYWQoKSkNCiAgICByZXR1cm4gZGF0YQ0KDQpkZWYgRDNfY29tcGFyZV9VSURMKGRhdGFfMSk6DQogICAgZmlsZV9wYXRoPW1haWxfZm9sZGVyKyIvL3VpZGxfbGlzdC5qc29uIg0KICAgIGRhdGEgPSBEM19yZWFkX2pzb25fZmlsZShmaWxlX3BhdGgpDQogICAgYWRkX21haWxzPXt9DQogICAgcmVtb3ZlX21haWxzPXt9DQogICAgI3Rlc3QNCiAgICBwcmludChsZW4oZGF0YSksbGVuKGRhdGFfMSksc2VwPSItIikNCiAgICBsaXN0X2tleT1saXN0KGRhdGEua2V5cygpKQ0KICAgIGxhc3Rfa2V5PWxpc3Rfa2V5Wy0xXQ0KICAgIGZvciBrZXksdmFsdWUgaW4gZGF0YV8xLml0ZW1zKCk6DQogICAgICAgIGlmIGtleSA8IGxhc3Rfa2V5Og0KICAgICAgICAgICAgaWYga2V5IG5vdCBpbiBsaXN0X2tleToNCiAgICAgICAgICAgICAgICByZW1vdmVfbWFpbHMudXBkYXRlKHtrZXk6dmFsdWV9KQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgaWYgb3MucGF0aC5leGlzdHMobWFpbF9mb2xkZXIrZiIvL0Jpbi8vbWVzc197dmFsdWVbMDotNF19Lm1zZyIpOg0KICAgICAgICAgICAgICAgIHJlbW92ZV9tYWlscy51cGRhdGUoe2tleTp2YWx1ZX0pDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGFkZF9tYWlscy51cGRhdGUoe2tleTp2YWx1ZX0pDQoNCiAgICAiIiJpZiBsZW4oZGF0YV8xKSAhPSBsZW4oZGF0YSk6DQogICAgICAgIGFkZF9tYWlscyA9IHtmIntpfSI6ZGF0YV8xW3N0cihpKV0gZm9yIGkgaW4gcmFuZ2UobGVuKGRhdGEpKzEsbGVuKGRhdGFfMSkrMSwxKX0NCiAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwndycpIGFzIGZpbGU6DQogICAgICAgICAgICBkYXRhLnVwZGF0ZShhZGRfbWFpbHMpDQogICAgICAgICAgICBmaWxlLndyaXRlKGpzb24uZHVtcHMoZGF0YSkpIiIiDQogICAgcmV0dXJuIGFkZF9tYWlscyxyZW1vdmVfbWFpbHMNCg0KIiIiZGVmIEQzX2dldF9tZXNfaWQoZGF0YV9tYWlsKToNCiAgICB0bXA9ZGF0YV9tYWlsDQogICAgbGluZXM9dG1wLnNwbGl0KCdcclxuJywzKQ0KICAgIGZvciBsaW5lIGluIGxpbmVzOg0KICAgICAgICBpZiBub3QgIk1lc3NhZ2UtSUQ6IiBpbiBsaW5lOg0KICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgZWxzZSA6DQogICAgICAgICAgICByZXR1cm4gbGluZS5zcGxpdCgpWzFdWzE6LTFdIiIiDQoNCg0KZGVmIEQxX2ZpbHRlcl9tYWlsKGZpbHRlcnMsIGVtYWlsX2luZm8pOg0KICAgIGNoZWNrID0gRmFsc2UNCiAgICBmb3IgaSBpbiBmaWx0ZXJzOg0KICAgICAgICBmaWx0ZXJfZmllbGQgPSBOb25lDQogICAgICAgIGlmIGZpbHRlcnNbaV1bJ2ZpbHRlcl9ieSddID09ICJzdWJqZWN0IjoNCiAgICAgICAgICAgIGZpbHRlcl9maWVsZCA9IGVtYWlsX2luZm9bJ0hlYWRlcnMnXVsnU3ViamVjdCddDQogICAgICAgIGVsaWYgZmlsdGVyc1tpXVsnZmlsdGVyX2J5J10gPT0gImNvbnRlbnQiOg0KICAgICAgICAgICAgZmlsdGVyX2ZpZWxkID0gZW1haWxfaW5mb1snVGV4dCddDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBmaWx0ZXJfZmllbGQgPSBlbWFpbF9pbmZvWydIZWFkZXJzJ11bJ0Zyb20nXQ0KDQogICAgICAgIGZvciBqIGluIGZpbHRlcnNbaV1bJ2tleXdvcmRzJ106DQogICAgICAgICAgICBjaGVjayA9IGogaW4gZmlsdGVyX2ZpZWxkDQogICAgICAgICAgICBpZiAoY2hlY2sgPT0gVHJ1ZSk6DQogICAgICAgICAgICAgICAgcmV0dXJuIGZpbHRlcnNbaV1bJ2ZpbHRlcl9kaXInXQ0KICAgIHJldHVybiBkYXRhLmluYm94X2Rpcg0KDQoNCmRlZiBEM19zYXZlX21haWxzKGVtYWlsX2luZm8sIGRhdGFfbWFpbCwgbWVzX2lkLCBmaWx0ZXJzKToNCiAgICBkaXIgPSBEMV9maWx0ZXJfbWFpbChmaWx0ZXJzLCBlbWFpbF9pbmZvKQ0KICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhkaXIpOg0KICAgICAgICBvcy5tYWtlZGlycyhkaXIpDQogICAgI3dyaXRlIGZpbGUubXNnDQogICAgZmlsZV9wYXRoPW9zLnBhdGguam9pbihkaXIsZiJ7bWVzX2lkfS5tc2ciKQ0KICAgIHdpdGggb3BlbihmaWxlX3BhdGgsICd3JykgYXMgbXNnX2ZpbGU6DQogICAgICAgIG1zZ19maWxlLndyaXRlKGRhdGFfbWFpbCkNCg0KICAgICIiIndpdGggb3BlbihmaWxlX3BhdGgsJ3InKSBhcyBtc2dfZmlsZToNCiAgICAgICAgZGF0YSA9IG1zZ19maWxlLnJlYWQoKQ0KICAgIHByaW50KGRhdGEpIiIiDQoNCmRlZiBEM19leHRyYWN0KHN0cl8xLHN0cl8yLHBhcnQpOg0KICAgIGlmIHN0cl8xIGluIHBhcnQ6DQogICAgICAgIHJldHVybiBwYXJ0LnNwbGl0KHN0cl8xLDEpWzFdLnNwbGl0KHN0cl8yLDEpWzBdLnN0cmlwKCciJykNCiAgICBlbHNlOiByZXR1cm4gJyAnDQpkZWYgRDNfZXh0cmFjdF9oZWFkZXJzKGhlYWRlcnMsc3RyaW5nKToNCiAgICBkYXRhPXt9DQogICAgc3RyXzI9c3RyaW5nDQogICAgZGF0YVsnRnJvbSddPUQzX2V4dHJhY3QoIkZyb206ICIsc3RyXzIsaGVhZGVycykNCiAgICBkYXRhWydUbyddPUQzX2V4dHJhY3QoIlRvOiAiLHN0cl8yLGhlYWRlcnMpDQogICAgZGF0YVsnQ2MnXT1EM19leHRyYWN0KCJDYzogIixzdHJfMixoZWFkZXJzKQ0KICAgIGRhdGFbJ1N1YmplY3QnXT1EM19leHRyYWN0KCJTdWJqZWN0OiAiLHN0cl8yLGhlYWRlcnMpDQogICAgZGF0YVsnQm91bmRhcnknXT1EM19leHRyYWN0KCJDb250ZW50LVR5cGU6IG11bHRpcGFydC9taXhlZDsgYm91bmRhcnk9IixzdHJfMixoZWFkZXJzKQ0KICAgIHJldHVybiBkYXRhDQoNCmRlZiBEM19leHRyYWN0X2JvZHkocGFydHMsYm91bmRhcnksc3RyaW5nKToNCiAgICBjb250ZW50PSIgIg0KICAgIGxpc3RfYXR0YWNobWVudHM9W10NCiAgICBmb3IgcGFydCBpbiBwYXJ0c1sxOi0xXToNCiAgICAgICAgaWYgIkNvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQiIGluIHBhcnQ6DQogICAgICAgICAgICBhdHRhY2htZW50PXsNCiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogRDNfZXh0cmFjdCgnQ29udGVudC1UeXBlOiAnLCI7IixwYXJ0KSwNCiAgICAgICAgICAgICAgICAnZmlsZW5hbWUnOkQzX2V4dHJhY3QoImZpbGVuYW1lPSIsc3RyaW5nLHBhcnQpLA0KICAgICAgICAgICAgICAgICdjb250ZW50JzpEM19leHRyYWN0KHN0cmluZytzdHJpbmcsc3RyaW5nK3N0cmluZyxwYXJ0KS5lbmNvZGUoJ3V0Zi04JykNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGxpc3RfYXR0YWNobWVudHMuYXBwZW5kKGF0dGFjaG1lbnQpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBjb250ZW50PUQzX2V4dHJhY3Qoc3RyaW5nK3N0cmluZywiLS0iK2JvdW5kYXJ5LHBhcnQpLnN0cmlwKHN0cmluZytzdHJpbmcpDQogICAgcmV0dXJuIGNvbnRlbnQsbGlzdF9hdHRhY2htZW50cw0KDQpkZWYgRDNfcGFyc2VfbWltZV9lbWFpbChyYXdfZW1haWwsc3RyaW5nKToNCiAgICBlbWFpbF9pbmZvPXt9DQogICAgIyBQYXJzaW5nIGVtYWlsIGludG8gaGVhZCBhbmQgYm9keXMNCiAgICBoZWFkZXJzLCBib2R5ID0gcmF3X2VtYWlsLnNwbGl0KHN0cmluZytzdHJpbmcsIDEpDQogICAgZW1haWxfaW5mb1snSGVhZGVycyddPSBEM19leHRyYWN0X2hlYWRlcnMoaGVhZGVycyxzdHJpbmcpDQoNCiAgICBib3VuZGFyeT0gZW1haWxfaW5mb1snSGVhZGVycyddWydCb3VuZGFyeSddDQogICAgaWYgYm91bmRhcnkhPSAiICI6DQogICAgICAgIHBhcnRzID0gYm9keS5zcGxpdCgnLS0nICsgYm91bmRhcnkpDQogICAgICAgICIiIiN0ZXN0DQogICAgICAgIGZvciBwYXJ0IGluIHBhcnRzWzE6LTFdOg0KICAgICAgICAgICAgcHJpbnQocGFydCxlbmQ9IlxyXG4iKQ0KICAgICAgICBmb3IgaSBpbiByYW5nZSgwLGxlbihwYXJ0cykpOg0KICAgICAgICAgICAgcHJpbnQoaSxwYXJ0c1tpXSxzZXA9Ii0tLSIsZW5kPSJcclxuIikNCiAgICAgICAgbGluZXM9cGFydHNbMV0uc3BsaXQoIlxyXG4iKQ0KICAgICAgICBmb3IgaSBpbiByYW5nZSgwLGxlbihsaW5lcykpOg0KICAgICAgICAgICAgcHJpbnQoaSxsaW5lc1tpXSxzZXA9Ii0tLSIsZW5kPSJcclxuIikiIiINCiAgICAgICAgZW1haWxfaW5mb1snVGV4dCddLGVtYWlsX2luZm9bJ0F0dGFjaG1lbnRzJ10gPSBEM19leHRyYWN0X2JvZHkocGFydHMsYm91bmRhcnksc3RyaW5nKQ0KICAgIGVsc2U6DQogICAgICAgIGVtYWlsX2luZm9bJ1RleHQnXT0gYm9keQ0KICAgICAgICBlbWFpbF9pbmZvWydBdHRhY2htZW50cyddPVtdDQogICAgcmV0dXJuIGVtYWlsX2luZm8NCg0KDQpkZWYgRDNfc2F2ZV9hdHRhY2htZW50cyhsaXN0X2F0dGFjaG1lbnRzLCBtZXNfaWQpOg0KICAgIGlm
IG5vdCBvcy5wYXRoLmV4aXN0cyhmaWxlX2F0dGFjaG1lbnRzKToNCiAgICAgICAgb3MubWFrZWRpcnMoZmlsZV9hdHRhY2htZW50cykNCiAgICBmb3IgYXR0YWNobWVudCBpbiBsaXN0X2F0dGFjaG1lbnRzOg0KICAgICAgICBmaWxlbmFtZSA9IG1lc19pZCArICdfJyArIGF0dGFjaG1lbnRbJ2ZpbGVuYW1lJ10NCiAgICAgICAgZmlsZV9wYXRoID0gb3MucGF0aC5qb2luKGZpbGVfYXR0YWNobWVudHMsIGZpbGVuYW1lKQ0KICAgICAgICAjaWYgb3MucGF0aC5leGlzdHMoZmlsZV9wYXRoKTogcmV0dXJuDQogICAgICAgIHdpdGggb3BlbihmaWxlX3BhdGgsICd3YicpIGFzIGZpbGU6DQogICAgICAgICAgICBfZGF0PWF0dGFjaG1lbnRbJ2NvbnRlbnQnXS5yZXBsYWNlKGInXHJcbicsYicgJykNCiAgICAgICAgICAgIGRlY29kZWRfZGF0ID0gYmFzZTY0LmI2NGRlY29kZShfZGF0KQ0KICAgICAgICAgICAgZmlsZS53cml0ZShkZWNvZGVkX2RhdCkNCg0KDQpkZWYgRDNfZGVsZXRlX29uX2NsaWVudChtZXNfaWQpOg0KICAgICNNb3ZlIG1lc188aWQ+Lm1zZw0KICAgIEJpbj1tYWlsX2ZvbGRlcisiLy9CaW4iDQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKEJpbik6DQogICAgICAgIG9zLm1ha2VkaXJzKEJpbikNCiAgICBzb3VyY2U9c2F2ZV90b19mb2xkZXIrZiIvL21lc3Nfe21lc19pZH0ubXNnIg0KICAgIGRlc3RpbmF0aW9uPUJpbg0KICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhCaW4rZiIvL21lc3Nfe21lc19pZH0ubXNnIik6DQogICAgICAgIGRlc3Q9c2h1dGlsLm1vdmUoc291cmNlLGRlc3RpbmF0aW9uKQ0KICAgICN1cGRhdGUgdWlkbF9saXN0DQogICAgcGF0aF91aWRsPW1haWxfZm9sZGVyKyIvL3VpZGxfbGlzdC5qc29uIg0KICAgIGRhdGE9e30NCiAgICB3aXRoIG9wZW4ocGF0aF91aWRsLCdyJykgYXMgZmlsZToNCiAgICAgICAgZGF0YT1qc29uLmxvYWRzKGZpbGUucmVhZCgpKQ0KICAgIGZvciBrZXksdmFsdWUgaW4gZGF0YS5pdGVtcygpOg0KICAgICAgICBpZih2YWx1ZSA9PWYie21lc19pZH0ubXNnIik6DQogICAgICAgICAgICBrZXlfcmVtb3ZlPWtleQ0KICAgIGRlbCBkYXRhW3N0cihrZXlfcmVtb3ZlKV0NCiAgICB3aXRoIG9wZW4ocGF0aF91aWRsLCd3JykgYXMgZmlsZToNCiAgICAgICAgZmlsZS53cml0ZShqc29uLmR1bXBzKGRhdGEpKQ0KDQojaWYgZGVsZXRlIG9uIGludGVyZmFjZSB1c2VyIGNhbGwgdGhpcyBmdW5jdGlvbg0KZGVmIEQzX2RlbGV0ZV9vbl9zZXJ2ZXIoc29jayxyZW1vdmVfbWFpbHMpOg0KICAgIGZvciBrZXkgaW4gcmVtb3ZlX21haWxzLmtleXMoKToNCiAgICAgICAgcmVzcG9uc2U9RDNfc2VuZF9jb21tYW5kKHNvY2ssZiJERUxFIHtrZXl9IikNCg0KZGVmIEQzX2ZldGNoX21haWwoc29jayxhZGRfbWFpbHMpOg0KICAgICMgUmVhZCByYXcgbWFpbA0KICAgIGZvciBrZXksIHZhbHVlIGluIGFkZF9tYWlscy5pdGVtcygpOg0KICAgICAgICByYXdfZW1haWwgPSBEM19zZW5kX2NvbW1hbmQoc29jaywgZiJSRVRSIHtrZXl9IixiJ1xyXG4uXHJcbicpLmRlY29kZSgndXRmLTgnKQ0KICAgICAgICAjcHJpbnQocmF3X2VtYWlsKQ0KICAgICAgICBlbWFpbF9pbmZvPUQzX3BhcnNlX21pbWVfZW1haWwocmF3X2VtYWlsLCJcclxuIikNCiAgICAgICAgaWYgZW1haWxfaW5mb1snQXR0YWNobWVudHMnXSAhPVtdOg0KICAgICAgICAgICAgRDNfc2F2ZV9hdHRhY2htZW50cyhlbWFpbF9pbmZvWydBdHRhY2htZW50cyddLCB2YWx1ZVswOi00XSkNCiAgICAgICAgRDNfc2F2ZV9tYWlscyhlbWFpbF9pbmZvLCByYXdfZW1haWwsIHZhbHVlWzA6LTRdLCBkYXRhLmZpbHRlcnMpDQoNCg0KZGVmIEQzX3JlbG9hZF9tYWlscyhwb3AzX3NlcnZlcixwb3AzX3BvcnQsdXNlcm5hbWUscGFzc3dvcmQpOg0KICAgIHdpdGggc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19TVFJFQU0pIGFzIHNvY2s6DQogICAgICAgIHNvY2suY29ubmVjdCgocG9wM19zZXJ2ZXIscG9wM19wb3J0KSkNCiAgICAgICAgRDNfcmVjZWl2ZV9kYXRhKHNvY2spDQogICAgICAgIEQzX3NlbmRfY29tbWFuZChzb2NrLCJDQVBBIikNCiAgICAgICAgRDNfc2VuZF9jb21tYW5kKHNvY2ssZiJVU0VSIHt1c2VybmFtZX0iKQ0KICAgICAgICBEM19zZW5kX2NvbW1hbmQoc29jayxmIlBBU1Mge3Bhc3N3b3JkfSIpDQoNCiAgICAgICAgI1N0YXQ6IGdldCB0aGUgbnVtYmVyIG9mIGVtYWlscyBhbmQgdGhlaXIgdG90YWwgc2l6ZQ0KICAgICAgICByZXNwb25zZT1EM19zZW5kX2NvbW1hbmQoc29jaywiU1RBVCIpDQogICAgICAgIG51bV9lbWFpbHMsIHRvdGFsX3NpemUgPSBtYXAoaW50LCByZXNwb25zZS5zcGxpdCgpWzE6M10pDQoNCiAgICAgICAgI0xJU1Q6IGdldCBsaXN0IG9mIG1haWxzIGFuZCB0aGVpciBzaXplDQogICAgICAgICNsaXN0X21haWxzPW1hcChzdHIsRDNfc2VuZF9jb21tYW5kKHNvY2ssJ0xJU1QnKS5zcGxpdChiJ1xyXG4nKVsxOi0yXSkNCiAgICAgICAgbGlzdF9tYWlsc19ieXRlcyA9IEQzX3NlbmRfY29tbWFuZChzb2NrLCJMSVNUIikuZGVjb2RlKCd1dGYtOCcpDQogICAgICAgIGRhdGEgPSBEM19saXN0X3RvX2RpY3QobGlzdF9tYWlsc19ieXRlcykNCiAgICAgICAgRDNfc2F2ZV9saXN0KGRhdGEsIkxpc3RfYnl0ZXMuanNvbiIpDQoNCiAgICAgICAgI1VJREw6IGdldCBhIGxpc3Qgb2YgdW5pcXVlIGlkZW50aWZpZXJzIGFzc2lnbmVkIGJ5IHRoZSBzZXJ2ZXIgdG8gZWFjaCBtZXNzYWdlDQogICAgICAgIGxpc3RfVUlETCA9IEQzX3NlbmRfY29tbWFuZChzb2NrLCJVSURMIikuZGVjb2RlKCd1dGYtOCcpDQogICAgICAgIGRhdGFfMSA9IEQzX2xpc3RfdG9fZGljdChsaXN0X1VJREwpDQogICAgICAgIGFkZF9tYWlscyA9IHt9DQogICAgICAgIHJlbW92ZV9tYWlscz17fQ0KDQogICAgICAgICIiIkQzX2RlbGV0ZV9vbl9jbGllbnQoMjAyMzEyMDMwMDE0MjEzMzApDQogICAgICAgIEQzX2RlbGV0ZV9vbl9jbGllbnQoMjAyMzEyMDIyMTQ4NTYyMDQpIiIiDQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhtYWlsX2ZvbGRlcisiLy91aWRsX2xpc3QuanNvbiIpOg0KICAgICAgICAgICAgYWRkX21haWxzPWRhdGFfMQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgYWRkX21haWxzLHJlbW92ZV9tYWlscz1EM19jb21wYXJlX1VJREwoZGF0YV8xKQ0KDQogICAgICAgICNEM19kZWxldGVfb25fc2VydmVyKHNvY2sscmVtb3ZlX21haWxzKQ0KICAgICAgICBEM19zYXZlX2xpc3QoZGF0YV8xLCAidWlkbF9saXN0Lmpzb24iKSN1cGRhdGUgZmllX3VpZGwNCiAgICAgICAgRDNfZmV0Y2hfbWFpbChzb2NrLGFkZF9tYWlscykNCg0KICAgICAgICAjcmF3X21haWw9RDNfc2VuZF9jb21tYW5kKHNvY2ssIlJFVFIgMTUiLGInXHJcbi5cclxuJykuZGVjb2RlKCd1dGYtOCcpDQogICAgICAgIHJhd19kYXRhPSIgIg0KICAgICAgICAjIHRoYXkgZG9pIGNhaSBtYSBuZ2F5IGRvbmcgZHVvaSB0aGFuaCBtYSBtYWlsIGJhdCBraSB0cm9uZyBtYXkgcm9pIHRlc3QgbmhhDQogICAgICAgICIiIndpdGggb3BlbihzYXZlX3RvX2ZvbGRlcisiLy9tZXNzXzIwMjMxMjA0MjMwMjU4MTM0Lm1zZyIsJ3InKWFzIGZpbGU6DQogICAgICAgICAgICByYXdfZGF0YT1maWxlLnJlYWQoKQ0KICAgICAgICAjcHJpbnQocmF3X2RhdGEpDQogICAgICAgIHJhd19kYXRhPXJhd19kYXRhLnNwbGl0KCJcblxuIiwxKVsxXS5zcGxpdCgiLlxuXG5cblxuIilbMF0NCiAgICAgICAgcHJpbnQocmF3X2RhdGEpDQogICAgICAgIGZpbGVfcGF0aD1vcy5wYXRoLmpvaW4oc2F2ZV90b19mb2xkZXIrInRlc3QubXNnIikNCiAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwndycpIGFzIGZpbGU6DQogICAgICAgICAgICBmaWxlLndyaXRlKHJhd19kYXRhKQ0KICAgICAgICB3aXRoIG9wZW4oZmlsZV9wYXRoLCdyJykgYXMgZmlsZToNCiAgICAgICAgICAgIF9kYXRhPWZpbGUucmVhZCgpDQogICAgICAgIGZvciBsaW5lIGluIGxpbmVzOg0KICAgICAgICAgICAgcHJpbnQoImRvbmciLGxpbmUsc2VwPSItLS0tIixlbmQ9IlxuXG4iKQ0KICAgICAgICBlbWFpbF9pbmZvPUQzX3BhcnNlX21pbWVfZW1haWwoX2RhdGEsIlxuXG4iKQ0KICAgICAgICAjRDNfc2F2ZV9hdHRhY2htZW50cyhlbWFpbF9pbmZvWydBdHRhY2htZW50cyddKQ0KICAgICAgICBwcmludChlbWFpbF9pbmZvKSIiIg0KDQoNCg0KDQoNCnNhdmVfdG9fZm9sZGVyID0gImRlYnVnL21haWxib3giDQpmaWxlX2F0dGFjaG1lbnRzID0gZGF0YS5maWxlc19kaXINCm1haWxfZm9sZGVyID0gImRlYnVnL2NsaWVudF9zb2NrZXQiDQoNCiIiImFwcCA9IFFBcHBsaWNhdGlvbihzeXMuYXJndikNCnJlYWRfbWFpbCA9IFJlYWRNYWlsKCkNCnJlYWRfbWFpbC5zaG93KCkNCmFwcC5leGVjKCkiIiINCg0KDQoNCg0KDQo=
--dGhpc19pc190aGVfc2VwYXJhdGVkX3N0cmluZw==--